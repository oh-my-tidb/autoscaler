name: CD Dev Pipeline

on:
  push:
    branches:
      - cse
  pull_request:
  workflow_dispatch:

jobs:
  build-push-image:
    name: Build Image & Push To ECR
    runs-on: self-hosted
    outputs:
      image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ github.sha }}
    env:
      ECR_REPO: dbaas/nightly/cluster-autoscaler
      AWS_ROLE_ARN: ${{ secrets.DBAAS_DEV_AWS_ROLE }}
      AWS_REGION: us-east-1
    steps:
      - name: check out code
        uses: actions/checkout@v4

      - name: setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: "gcr.io/pingcap-public/third-party/tonistiigi/binfmt:qemu-v6.2.0"

      - name: set up Docker-Context
        run: |
          docker --context tls-env info || docker context create tls-env

      - name: setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          endpoint: tls-env
          driver-opts: |
            image=gcr.io/pingcap-public/third-party/moby/buildkit:buildx-stable-1

      - name: install AWS-Cli
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update

      - name: login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: make sure the image repos exist
        run: |
          aws ecr describe-repositories --repository-names ${{ env.ECR_REPO }} || aws ecr create-repository --repository-name ${{ env.ECR_REPO }} || exit 1

      - name: build and push latest images
        uses: docker/build-push-action@v6
        with:
          context: ./cluster-autoscaler
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            GITHUB_TOKEN=${{ secrets.GIT_ACTION_BOT }}
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ github.sha }}
